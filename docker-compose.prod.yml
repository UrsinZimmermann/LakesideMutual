#
# This is a docker-compose file to build and start all Lakeside Mutual
# applications in a single command. Note that the applications will all
# run in production mode, so there won't be any live-reloading of changes
# or other development features. For development, we recommend to start
# the applications invidually or use the run_all_applications scripts.
#
# Since the Dockerfiles use BuildKit features, you have to set the
# DOCKER_BUILDKIT environment variable accordingly.
#
# To build the Docker images:
#   COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
#
# To run the applications:
#   COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose up
#
# To shut down the applications, simply terminate the previous command.
#

version: "3"
services:
  spring-boot-admin:
    build: spring-boot-admin
    image: backis9/spring-boot-admin
    ports:
      - "9000:9000"

  customer-core:
    build: customer-core
    image: backis9/customer-core
    environment:
      - "SPRING_BOOT_ADMIN_CLIENT_URL=spring-boot-admin:9000"
    ports:
      - "8110:8110"

  customer-management-backend:
    build: customer-management-backend
    image: backis9/customer-management-backend
    depends_on:
      - customer-core
    environment:
      - "CUSTOMERCORE_BASEURL=customer-core:8110"
      - "SPRING_BOOT_ADMIN_CLIENT_URL=spring-boot-admin:9000"
    ports:
      - "8100:8100"

  customer-management-frontend:
    build: customer-management-frontend
    image: backis9/customer-management-frontend
    depends_on:
      - customer-management-backend
    ports:
      - "3020:80"

  customer-self-service-backend:
    build: customer-self-service-backend
    image: backis9/customer-self-service-backend
    depends_on:
      - customer-core
    environment:
      - "CUSTOMERCORE_BASEURL=customer-core:8110"
      - "SPRING_BOOT_ADMIN_CLIENT_URL=spring-boot-admin:9000"
    ports:
      - "8080:8080"

  customer-self-service-frontend:
    build: customer-self-service-frontend
    image: backis9/customer-self-service-frontend
    depends_on:
      - customer-self-service-backend
      - customer-management-backend
    ports:
      - "3000:80"
